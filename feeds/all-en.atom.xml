<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>blog.kgz.sh</title><link href="https://blog.kgz.sh/" rel="alternate"></link><link href="https://blog.kgz.sh/feeds/all-en.atom.xml" rel="self"></link><id>https://blog.kgz.sh/</id><updated>2025-02-16T16:00:00+00:00</updated><entry><title>Lightning Lightning Talks at FOSDEM 2025</title><link href="https://blog.kgz.sh/fosdem-lightning-lightning-talks" rel="alternate"></link><published>2025-02-16T16:00:00+00:00</published><updated>2025-02-16T16:00:00+00:00</updated><author><name>Louis Taylor</name></author><id>tag:blog.kgz.sh,2025-02-16:/fosdem-lightning-lightning-talks</id><content type="html">&lt;p&gt;For the last few years I've been running the lightning talk track at
&lt;a class="reference external" href="https://fosdem.org"&gt;FOSDEM&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This track contains a series of 15 minute talks separated by 5 minute breaks
all day, a format which has been mostly unchanged since its first &lt;a class="reference external" href="https://archive.fosdem.org/2007/schedule/tracks/lightningtalks.html"&gt;introduction in
2007&lt;/a&gt;, 18
years ago:&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://archive.fosdem.org/2007/schedule/tracks/lightningtalks.html"&gt;
&lt;img alt="Screenshot of FOSDEM 2007 lightning talk schedule" src="https://blog.kgz.sh/images/2007-lightning-talks.png" /&gt;
&lt;/a&gt;
&lt;p&gt;There are some advantages to this format:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;listing each talk in the schedule allows people to attend a single talk which interests them, then leave&lt;/li&gt;
&lt;li&gt;5 minute gaps between talks allow for more tolerance towards technical difficulties&lt;/li&gt;
&lt;li&gt;can be handled like any other talk in the program&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And some (subjective) disadvantages:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;different from what people would expect &amp;quot;lightning talks&amp;quot; to mean compared to other events&lt;/li&gt;
&lt;li&gt;15 minutes is actually quite a long time, and preparing a good talk of this length requires some effort&lt;/li&gt;
&lt;li&gt;more effort makes it harder to spontaneously prepare a talk, and riskier to accept a hastily prepared talk into the schedule&lt;/li&gt;
&lt;li&gt;some speakers prepare a talk which takes less than 15 minutes, so someone watching a series of talks might see 10 minutes of talk, followed by 10 minutes of gap before the next talk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For better or for worse, the average talk length at FOSDEM has also been steadily decreasing over the years.
If we extrapolate this trend into the future, talks in the current lightning
talk track will at some point be longer than the average talk elsewhere!&lt;/p&gt;
&lt;object data="https://blog.kgz.sh/images/fosdem-talk-length.svg" type="image/svg+xml"&gt;Plot of year and average talk length&lt;/object&gt;
&lt;p&gt;This clearly makes the case for something which contains even more lightning
than the usual lightning talks.&lt;/p&gt;
&lt;p&gt;For FOSDEM 2025, I wanted to make something with the following goals:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;A single session with no downtime&lt;/li&gt;
&lt;li&gt;Felt spontaneous&lt;/li&gt;
&lt;li&gt;Entertaining to watch&lt;/li&gt;
&lt;li&gt;Low bar for entry&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Normally this kind of session at a conference would just be called &amp;quot;lightning
talks&amp;quot;, but we already have the existing lightning talks track which wouldn't
be changing this year.&lt;/p&gt;
&lt;p&gt;Since the main difference between them is the quantity of lightning involved, I named it
Lightning Lightning Talks instead.&lt;/p&gt;
&lt;div class="section" id="the-software"&gt;
&lt;h2&gt;The software&lt;/h2&gt;
&lt;p&gt;To run this session, something needed to:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Let people submit talk proposals with slides attached&lt;/li&gt;
&lt;li&gt;Review and accept some talks&lt;/li&gt;
&lt;li&gt;On the day of the session, grab the slides for accepted talks&lt;/li&gt;
&lt;li&gt;Display a title screen to make sure the right speaker starts speaking&lt;/li&gt;
&lt;li&gt;Display presentation slides&lt;/li&gt;
&lt;li&gt;Count how long a speaker has left&lt;/li&gt;
&lt;li&gt;Move to the next talk once time has run out&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first two points are covered by &lt;a class="reference external" href="https://github.com/pretalx/pretalx"&gt;pretalx&lt;/a&gt;, the tool used for all the normal
proposal management at FOSDEM. The only complication was making it easy to get
the list of accepted talks and the attached slides. This ended up being a new track in
pretalx, and also a new proposal type to make filtering using the pretalx API
possible.&lt;/p&gt;
&lt;p&gt;A tool could then be written to query the API for the data about talks and
write an intermediate config file describing the required info for the upcoming
session. Since there's a much higher chance of changes at the last minute (for
example some speakers not turning up), keeping the info for the session in a
format which could be quickly edited by hand was important. It also removes a
hard dependency on our pretalx deployment, so the session can run even if
pretalx is down for some reason.&lt;/p&gt;
&lt;p&gt;This file is a fairly unexciting &lt;tt class="docutils literal"&gt;.json&lt;/tt&gt; file, and looks about the same as you would expect:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Zagreb City case study: How to foster open data with public money&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;speakers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Aleksandar Gavrilovic&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;slides_url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://pretalx.fosdem.org/media/fosdem-2025/submissions/8NP3TN/resources/Zagreb_Ca_ryBYjbT.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;slides_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Zagreb_Ca_ryBYjbT.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;created&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2025-01-20T09:32:48.352004+01:00&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A Card Game for you techies&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;speakers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Thierry Berger&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;slides_url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://pretalx.fosdem.org/media/fosdem-2025/submissions/DXRMQC/resources/pitch_kln5nRa.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;slides_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pitch_kln5nRa.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;created&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2025-01-28T09:29:02.942777+01:00&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I wrote a custom presentation tool which reads this &lt;tt class="docutils literal"&gt;.json&lt;/tt&gt; and uses it to
display a neat title screen for each talk followed by the slides provided by
each speaker. This uses GTK for the main application and Pango + Cairo to
render most of the graphics.&lt;/p&gt;
&lt;p&gt;To annoy everyone equally (except LaTeX users) I required slides in &lt;tt class="docutils literal"&gt;.pdf&lt;/tt&gt;
format, which meant I needed to render pages from them for the main
presentation content. For this I used Poppler &lt;a class="footnote-reference" href="#footnote-1" id="footnote-reference-1"&gt;[1]&lt;/a&gt;, which ended up being pretty
easy to implement (except for spending a bit too long figuring out why a
particular presentation wasn't rendering correctly before I found out pdf
documents could be transparent and I was rendering on a black background).&lt;/p&gt;
&lt;p&gt;Most of the time developing this tool probably went into making the title
screen look nice, with a pleasing ease in function (quint, &lt;span class="formula"&gt;1 − (1 − &lt;i&gt;t&lt;/i&gt;)&lt;sup&gt;5&lt;/sup&gt;&lt;/span&gt;)
animating the FOSDEM cog pulling the title on to the screen:&lt;/p&gt;
&lt;video autoplay loop muted playsinline&gt;
  &lt;source src="https://blog.kgz.sh/images/lightninglightning-2025-02-09_15.09.38_1.webm" type="video/webm" /&gt;
&lt;/video&gt;&lt;p&gt;A second window shows the time remaining for the current speaker, which can be displayed on a secondary monitor:&lt;/p&gt;
&lt;video autoplay loop muted playsinline&gt;
  &lt;source src="https://blog.kgz.sh/images/lightninglightning-countdown-2025-02-09_15.12.14_1.webm" type="video/webm" /&gt;
&lt;/video&gt;&lt;p&gt;To make sure speakers don't overstay their welcome on the stage, the system
needs to move them on. For lightning talks elsewhere, this is often done with a
separate timer and social pressure to stop. Since this custom presentation tool
knows how long the current speaker has taken and the order of talks, it can
immediately start the next talk once the time has run out.&lt;/p&gt;
&lt;p&gt;When the time left reaches 10 seconds, the countdown screen starts flashing in
warning, while the presentation slides slowly fade out to the title screen and
the next talk begins automatically:&lt;/p&gt;
&lt;video autoplay loop muted playsinline&gt;
  &lt;source src="https://blog.kgz.sh/images/lightninglightning-countdown-move-to-next-2025-02-09_15.23.33_1.webm" type="video/webm" /&gt;
&lt;/video&gt;&lt;p&gt;Code for this tool is available at &lt;a class="reference external" href="https://github.com/kragniz/fosdem-lightning-talk-presenter"&gt;https://github.com/kragniz/fosdem-lightning-talk-presenter&lt;/a&gt;&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="footnote-1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#footnote-reference-1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;As luck would have it, there was a lightning talk at FOSDEM this year about Poppler: &lt;a class="reference external" href="https://fosdem.org/2025/schedule/event/fosdem-2025-6000-poppler-the-pdf-rendering-library/"&gt;https://fosdem.org/2025/schedule/event/fosdem-2025-6000-poppler-the-pdf-rendering-library/&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="people-logistics"&gt;
&lt;h2&gt;People logistics&lt;/h2&gt;
&lt;p&gt;Despite planning the actual presentation display and submission system, I
hadn't fully planned the logistics of people moving around until the evening
before the session. This meant quickly working out a system to make sure
speakers could smoothly flow from one talk to the next.&lt;/p&gt;
&lt;p&gt;With the help of some volunteers who were assisting with running the session on
the day, we thought through a few options and settled with:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Printing off the talk schedule, and giving a copy to each speaker just in case the order is forgotten&lt;/li&gt;
&lt;li&gt;Sitting speakers &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;n-3&lt;/span&gt;&lt;/tt&gt; in a row of audience seats in the same order as their position in the talk schedule&lt;/li&gt;
&lt;li&gt;Using two seats at the side of the stage as a staging area (#1 containing the next speaker, and #2 containing the speaker after next)&lt;/li&gt;
&lt;li&gt;Using two handheld microphones (one held by the current speaker, one held by the next speaker)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On a talk ending, everybody swaps to a new position simultaneously:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Speaker leaves the stage, handing their microphone to the person in staging area seat #2&lt;/li&gt;
&lt;li&gt;Person in the #1 staging area seat takes to the stage and begins their talk&lt;/li&gt;
&lt;li&gt;Person in staging area seat #2 moves to seat #1&lt;/li&gt;
&lt;li&gt;Person in the rightmost seat in the audience row moves to staging area seat #2&lt;/li&gt;
&lt;li&gt;All other speakers sitting in the audience row move one seat to the right&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This ended up worked pretty smoothly. There was a contingency plan in case a
speaker carried on talking after their time ran out involving a volunteer
threateningly wielding a brush and sweeping them off the stage, which (somewhat
unfortunately, since it would have been entertaining) never needed to be deployed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-it-went"&gt;
&lt;h2&gt;How it went&lt;/h2&gt;
&lt;p&gt;I was really pleased with how this worked out in the end. Running a session
which relied on custom presentation software and a large number of speakers had
the potential for some unforeseen disaster, which had made me a bit anxious. No
disasters took place, and feedback has been nice.&lt;/p&gt;
&lt;p&gt;You can watch the recording here:&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://fosdem.org/2025/schedule/event/fosdem-2025-6674-lightning-lightning-talks/"&gt;
&lt;img alt="Screenshot of FOSDEM 2007 lightning talk schedule" src="https://blog.kgz.sh/images/lightning-lightning-title.jpg" /&gt;
&lt;/a&gt;
&lt;p&gt;The talks were good. Someone was enthusiastic about isopods:&lt;/p&gt;
&lt;blockquote class="mastodon-embed" data-embed-url="https://chaos.social/@whatareyoudoinginmyswamp/113947154552710824/embed" style="background: #FCF8FF; border-radius: 8px; border: 1px solid #C9C4DA; margin: 0; max-width: 540px; min-width: 270px; overflow: hidden; padding: 0;"&gt; &lt;a href="https://chaos.social/@whatareyoudoinginmyswamp/113947154552710824" target="_blank" style="align-items: center; color: #1C1A25; display: flex; flex-direction: column; font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', Roboto, sans-serif; font-size: 14px; justify-content: center; letter-spacing: 0.25px; line-height: 20px; padding: 24px; text-decoration: none;"&gt; &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="32" height="32" viewBox="0 0 79 75"&gt;&lt;path d="M74.7135 16.6043C73.6199 8.54587 66.5351 2.19527 58.1366 0.964691C56.7196 0.756754 51.351 0 38.9148 0H38.822C26.3824 0 23.7135 0.756754 22.2966 0.964691C14.1319 2.16118 6.67571 7.86752 4.86669 16.0214C3.99657 20.0369 3.90371 24.4888 4.06535 28.5726C4.29578 34.4289 4.34049 40.275 4.877 46.1075C5.24791 49.9817 5.89495 53.8251 6.81328 57.6088C8.53288 64.5968 15.4938 70.4122 22.3138 72.7848C29.6155 75.259 37.468 75.6697 44.9919 73.971C45.8196 73.7801 46.6381 73.5586 47.4475 73.3063C49.2737 72.7302 51.4164 72.086 52.9915 70.9542C53.0131 70.9384 53.0308 70.9178 53.0433 70.8942C53.0558 70.8706 53.0628 70.8445 53.0637 70.8179V65.1661C53.0634 65.1412 53.0574 65.1167 53.0462 65.0944C53.035 65.0721 53.0189 65.0525 52.9992 65.0371C52.9794 65.0218 52.9564 65.011 52.9318 65.0056C52.9073 65.0002 52.8819 65.0003 52.8574 65.0059C48.0369 66.1472 43.0971 66.7193 38.141 66.7103C29.6118 66.7103 27.3178 62.6981 26.6609 61.0278C26.1329 59.5842 25.7976 58.0784 25.6636 56.5486C25.6622 56.5229 25.667 56.4973 25.6775 56.4738C25.688 56.4502 25.7039 56.4295 25.724 56.4132C25.7441 56.397 25.7678 56.3856 25.7931 56.3801C25.8185 56.3746 25.8448 56.3751 25.8699 56.3816C30.6101 57.5151 35.4693 58.0873 40.3455 58.086C41.5183 58.086 42.6876 58.086 43.8604 58.0553C48.7647 57.919 53.9339 57.6701 58.7591 56.7361C58.8794 56.7123 58.9998 56.6918 59.103 56.6611C66.7139 55.2124 73.9569 50.665 74.6929 39.1501C74.7204 38.6967 74.7892 34.4016 74.7892 33.9312C74.7926 32.3325 75.3085 22.5901 74.7135 16.6043ZM62.9996 45.3371H54.9966V25.9069C54.9966 21.8163 53.277 19.7302 49.7793 19.7302C45.9343 19.7302 44.0083 22.1981 44.0083 27.0727V37.7082H36.0534V27.0727C36.0534 22.1981 34.124 19.7302 30.279 19.7302C26.8019 19.7302 25.0651 21.8163 25.0617 25.9069V45.3371H17.0656V25.3172C17.0656 21.2266 18.1191 17.9769 20.2262 15.568C22.3998 13.1648 25.2509 11.9308 28.7898 11.9308C32.8859 11.9308 35.9812 13.492 38.0447 16.6111L40.036 19.9245L42.0308 16.6111C44.0943 13.492 47.1896 11.9308 51.2788 11.9308C54.8143 11.9308 57.6654 13.1648 59.8459 15.568C61.9529 17.9746 63.0065 21.2243 63.0065 25.3172L62.9996 45.3371Z" fill="currentColor"/&gt;&lt;/svg&gt; &lt;div style="color: #787588; margin-top: 16px;"&gt;Post by @whatareyoudoinginmyswamp@chaos.social&lt;/div&gt; &lt;div style="font-weight: 500;"&gt;View on Mastodon&lt;/div&gt; &lt;/a&gt; &lt;/blockquote&gt; &lt;script data-allowed-prefixes="https://chaos.social/" async src="https://chaos.social/embed.js"&gt;&lt;/script&gt;&lt;/div&gt;
&lt;div class="section" id="future"&gt;
&lt;h2&gt;Future&lt;/h2&gt;
&lt;p&gt;I'd like to make some changes if we run something similar next time:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I'd like to encourage more random and fun topics&lt;/li&gt;
&lt;li&gt;5 minutes is still quite a long time! In a 50 minute session we can only fit
10 talks if everyone takes the maximum time. Maybe next time the limit could
be 3 minutes.&lt;/li&gt;
&lt;li&gt;A bigger display showing the countdown visible from the audience would be nice&lt;/li&gt;
&lt;li&gt;Make sure no mouse cursor is drawn over slides&lt;/li&gt;
&lt;li&gt;The countdown should start as soon as the title screen is shown&lt;/li&gt;
&lt;li&gt;A remote control to skip to the next presentation would be good, some
speakers forgot to complete their slides all the way to the end, so the next
speaker needed to skip forward a bit awkwardly&lt;/li&gt;
&lt;li&gt;Shuffling all speakers one seat over was necessary because all the seats in
this room have built in desks which make getting in and out of a row awkward
unless you are sitting right at the end. Obtaining extra chairs to make an
additional row of seats at the font would avoid needing to do this.&lt;/li&gt;
&lt;li&gt;The submission process needs to be smoother. The extra track and submission
type was confusing in the pretalx UI.&lt;/li&gt;
&lt;li&gt;The submission deadline and status needs to be communicated better. I was
originally worried about not getting enough proposals, but ended up getting
too many. I closed submissions early since I didn't want people to spend time
working on a presentation if all the spaces were taken, but this (quite
rightfully) annoyed some people since they thought there would still be time
to submit a talk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I originally wanted to make talk order random out of a pool of people who
registered as speakers before the session begins. However this felt a bit too
risky for a first try. Perhaps some element of this could be introduced next
time?&lt;/p&gt;
&lt;p&gt;Hopefully Lightning Lightning Talks will return next time (maybe with a name change)!&lt;/p&gt;
&lt;/div&gt;
</content><category term="fosdem"></category><category term="fosdem"></category><category term="conferences"></category></entry><entry><title>Raspbian on Travis CI</title><link href="https://blog.kgz.sh/raspbian-on-travis-ci" rel="alternate"></link><published>2016-01-22T22:23:00+00:00</published><updated>2016-01-22T22:23:00+00:00</updated><author><name>Louis Taylor</name></author><id>tag:blog.kgz.sh,2016-01-22:/raspbian-on-travis-ci</id><content type="html">&lt;p&gt;For abersailbot, I've been working on automation of provisioning images to run
on the main raspberry pi inside the boat. In the past, this has been a
primitive bash script which installs packages and configurations files with a
dubious amount of calls out to apt, cp and sed. Wanting to make this a little
more sophisticated, I started writing a set of ansible playbooks.&lt;/p&gt;
&lt;p&gt;For testing other repositories, I normally always use
&lt;a class="reference external" href="https://travis-ci.org"&gt;https://travis-ci.org&lt;/a&gt;. If you're not familiar, Travis CI offers free CI
resources for open source repositories. The VMs it boots are all Ubuntu on
x86_64, however. In order to test things on raspbian, some hacks would be
needed.&lt;/p&gt;
&lt;p&gt;Options I considered:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;No testing (no tests? What madness!)&lt;/li&gt;
&lt;li&gt;ARM chroot&lt;/li&gt;
&lt;li&gt;Raspbian fat Docker container&lt;/li&gt;
&lt;li&gt;Raspbian image booted under QEMU&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After some playing around, the QEMU route seemed like the best option. If you'd
like to do the same, the steps I took are fairly simple:&lt;/p&gt;
&lt;p&gt;First off, we need to get a disk image. The images provided from the Raspberry
Pi site need some small modifications to run under QEMU, so we need to mount
and edit it. I'm using the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;2015-11-21-raspbian-jessie-lite.img&lt;/span&gt;&lt;/tt&gt; image from
&lt;a class="reference external" href="https://www.raspberrypi.org/downloads/raspbian/"&gt;https://www.raspberrypi.org/downloads/raspbian/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This image contains two partitions, a small boot partition (FAT) which contains
a few config files and a kernel, and the main ext4 root partition. The latter
is the partition we're interested in. You can inspect the image with &lt;tt class="docutils literal"&gt;fdisk&lt;/tt&gt;
to show these:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
~/g/dewi (master) $ fdisk -l 2015-11-21-raspbian-jessie-lite.img
Disk 2015-11-21-raspbian-jessie-lite.img: 1.4 GiB, 1458569216 bytes, 2848768 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0xb3c5e39a

Device                               Boot  Start     End Sectors  Size Id Type
2015-11-21-raspbian-jessie-lite.img1        8192  131071  122880   60M  c W95 FAT32 (LBA)
2015-11-21-raspbian-jessie-lite.img2      131072 2848767 2717696  1.3G 83 Linux
&lt;/pre&gt;
&lt;p&gt;Note the start of the partition we're interested in (131072). This is the
offset from the start of the image in terms of number of sectors. The sector
size is 512, so the actual offset in terms of bytes is 131072 × 512 =
67108864.&lt;/p&gt;
&lt;p&gt;Armed with this knowledge, we can mount the image and edit files on it
interactively.&lt;/p&gt;
&lt;p&gt;First, create a directory to mount the image:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ mkdir raspbian-jessie-mount-point
&lt;/pre&gt;
&lt;p&gt;then mount the image:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo mount -o loop,offset=67108864 2015-11-21-raspbian-jessie-lite.img \
  raspbian-jessie-mount-point
&lt;/pre&gt;
&lt;p&gt;Now it's time to comment out a bunch of things.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Open &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;raspbian-jessie-mount-point/etc/ld.so.preload&lt;/span&gt;&lt;/tt&gt; in an editor of your
choice and comment out all lines.&lt;/li&gt;
&lt;li&gt;Do the same and comment out all lines related to &lt;tt class="docutils literal"&gt;mmccblk&lt;/tt&gt; in
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;raspbian-jessie-mount-point/etc/fstab&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After these edits have been made, unmount the image:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo umount raspbian-jessie-mount-point
&lt;/pre&gt;
&lt;p&gt;The modified image can now be saved and backed up somewhere. I took a copy and
compressed it to save on space:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ xz 2015-11-21-raspbian-jessie-lite.img
&lt;/pre&gt;
&lt;p&gt;Now we have an image to boot, we need a kernel to run. Sadly, a modified
kernel is required, since QEMU does not support raspberry pi hardware. Luckily
the work of patching and building has already been done by someone else.
&lt;a class="reference external" href="https://github.com/polaco1782/raspberry-qemu"&gt;https://github.com/polaco1782/raspberry-qemu&lt;/a&gt; appears to work well.&lt;/p&gt;
&lt;p&gt;Clone that repository and copy &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;kernel-qemu&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git clone git&amp;#64;github.com:polaco1782/raspberry-qemu.git
$ cp raspberry-qemu/kernel-qemu .
&lt;/pre&gt;
&lt;p&gt;At this point, booting should be possible. To test, first install
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;qemu-system-arm&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;If you're on Fedora:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo dnf install qemu-system-arm
&lt;/pre&gt;
&lt;p&gt;Or Debian/Ubuntu:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo apt install qemu-system-arm
&lt;/pre&gt;
&lt;p&gt;Then run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ qemu-system-arm \
    -kernel kernel-qemu \
    -cpu arm1176 \
    -m 256 \
    -M versatilepb \
    -no-reboot \
    -serial stdio \
    -display none \
    -append &amp;quot;root=/dev/sda2 panic=1 rootfstype=ext4 rw&amp;quot; \
    -net user,hostfwd=tcp::10022-:22 \
    -net nic -hda \
    2015-11-21-raspbian-jessie-lite.img
&lt;/pre&gt;
&lt;p&gt;Note the option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-net&lt;/span&gt; &lt;span class="pre"&gt;user,hostfwd=tcp::10022-:22&lt;/span&gt;&lt;/tt&gt;. This forwards port 22 on
raspbian to 10022 on the host, allowing us to ssh into the booted VM.&lt;/p&gt;
&lt;p&gt;You should see some output similar to:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pulseaudio: pa_context_connect() failed
pulseaudio: Reason: Connection refused
pulseaudio: Failed to initialize PA contextaudio: Could not init `pa' audio driver
ALSA lib confmisc.c:768:(parse_card) cannot find card '0'
ALSA lib conf.c:4248:(_snd_config_evaluate) function snd_func_card_driver returned error: No such file or directory
ALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings
ALSA lib conf.c:4248:(_snd_config_evaluate) function snd_func_concat returned error: No such file or directory
ALSA lib confmisc.c:1251:(snd_func_refer) error evaluating name
ALSA lib conf.c:4248:(_snd_config_evaluate) function snd_func_refer returned error: No such file or directory
ALSA lib conf.c:4727:(snd_config_expand) Evaluate error: No such file or directory
ALSA lib pcm.c:2239:(snd_pcm_open_noupdate) Unknown PCM default
alsa: Could not initialize DAC
alsa: Failed to open `default':
alsa: Reason: No such file or directory
ALSA lib confmisc.c:768:(parse_card) cannot find card '0'
ALSA lib conf.c:4248:(_snd_config_evaluate) function snd_func_card_driver returned error: No such file or directory
ALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings
ALSA lib conf.c:4248:(_snd_config_evaluate) function snd_func_concat returned error: No such file or directory
ALSA lib confmisc.c:1251:(snd_func_refer) error evaluating name
ALSA lib conf.c:4248:(_snd_config_evaluate) function snd_func_refer returned error: No such file or directory
ALSA lib conf.c:4727:(snd_config_expand) Evaluate error: No such file or directory
ALSA lib pcm.c:2239:(snd_pcm_open_noupdate) Unknown PCM default
alsa: Could not initialize DAC
alsa: Failed to open `default':
alsa: Reason: No such file or directory
audio: Failed to create voice `lm4549.out'
Uncompressing Linux... done, booting the kernel.
&lt;/pre&gt;
&lt;p&gt;Test if a login works:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ ssh localhost -o StrictHostKeyChecking=no -p 10022 -l pi
&lt;/pre&gt;
&lt;p&gt;The password should be the default &lt;tt class="docutils literal"&gt;raspberry&lt;/tt&gt;, unless you changed it
earlier.&lt;/p&gt;
&lt;p&gt;If this all works, you can start writing your &lt;tt class="docutils literal"&gt;.travis.yml&lt;/tt&gt; to boot this VM
on Travis CI runs. You should first enable travis commit hooks on your
repository (read the &lt;a class="reference external" href="https://docs.travis-ci.com/user/getting-started/"&gt;getting started guide&lt;/a&gt;), then start writing a
configuration file. A simple version of the config file to start off:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;generic&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;trusty&lt;/span&gt;

&lt;span class="n"&gt;before_install&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;qemu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;arm&lt;/span&gt; &lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="n"&gt;xz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt; &lt;span class="n"&gt;sshpass&lt;/span&gt;

&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://super-secret-location.com/2015-11-21-raspbian-jessie-lite.img.xz&amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;unxz&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2015-11-21-raspbian-jessie-lite.img.xz&amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;polaco1782&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;raspberry&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;qemu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;

&lt;span class="n"&gt;before_script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;qemu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;arm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt; &lt;span class="n"&gt;raspberry&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;qemu&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;qemu&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cpu&lt;/span&gt; &lt;span class="n"&gt;arm1176&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;versatilepb&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reboot&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;serial&lt;/span&gt; &lt;span class="n"&gt;stdio&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;root=/dev/sda2 panic=1 rootfstype=ext4 rw&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;hostfwd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tcp&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="mi"&gt;10022&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="n"&gt;nic&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt; &lt;span class="n"&gt;none&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hda&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;raspbian&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jessie&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lite&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;

&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sshpass&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;raspberry&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;localhost&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;StrictHostKeyChecking&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;10022&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="n"&gt;pi&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cat /etc/os-release&amp;quot;&lt;/span&gt;
    &lt;span class="c1"&gt;# whatever you want to test here&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should note this requires a mirror of the image created in the earlier
steps. Each CI run will have to download and decompress the image. With Travis
Pro, I believe you might be able to do something different and cache it, but I
didn't investigate this.&lt;/p&gt;
&lt;p&gt;This runs &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;qemu-system-arm&lt;/span&gt;&lt;/tt&gt; in the background. In order to wait until the VM
is ready, I made a crude script named &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;wait-for-ssh&lt;/span&gt;&lt;/tt&gt; to ping the ssh port
until it responded:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;true&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;nc&lt;span class="w"&gt; &lt;/span&gt;-z&lt;span class="w"&gt; &lt;/span&gt;localhost&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10022&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Found something on port 10022!&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nothing found on port 10022, sleeping...&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;sleep&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When this is done, you can actually test the stuff you wanted to test in the
first place! In the example &lt;tt class="docutils literal"&gt;.travis.yml&lt;/tt&gt;, I do a sanity check and cat
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/os-release&lt;/span&gt;&lt;/tt&gt;, expecting something like:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
PRETTY_NAME=&amp;quot;Raspbian GNU/Linux 8 (jessie)&amp;quot;
NAME=&amp;quot;Raspbian GNU/Linux&amp;quot;
VERSION_ID=&amp;quot;8&amp;quot;
VERSION=&amp;quot;8 (jessie)&amp;quot;
ID=raspbian
ID_LIKE=debian
HOME_URL=&amp;quot;http://www.raspbian.org/&amp;quot;
SUPPORT_URL=&amp;quot;http://www.raspbian.org/RaspbianForums&amp;quot;
BUG_REPORT_URL=&amp;quot;http://www.raspbian.org/RaspbianBugs&amp;quot;
&lt;/pre&gt;
&lt;p&gt;Now you have a little Raspbian VM booted on every commit. Run some ansible or
puppet against it and you're done. Happy testing!&lt;/p&gt;
</content><category term="raspberry-pi"></category><category term="raspbian"></category><category term="raspberry pi"></category><category term="qemu"></category></entry><entry><title>kpatch-package-builder 0.1.0</title><link href="https://blog.kgz.sh/kpatch-package-builder" rel="alternate"></link><published>2015-06-29T22:23:00+01:00</published><updated>2015-06-29T22:23:00+01:00</updated><author><name>Louis Taylor</name></author><id>tag:blog.kgz.sh,2015-06-29:/kpatch-package-builder</id><content type="html">&lt;p&gt;As part of &lt;a class="reference external" href="https://developers.google.com/open-source/gsoc/"&gt;Google Summer of Code&lt;/a&gt;, I've been working with the
CentOS project to create a delivery and build system to provide easy and
automatic delivery of patches to a running linux kernel. CentOS 7 currently has
support for live patching a running kernel (via the kpatch kernel module and
the surrounding userland tools), but crafting a patch and applying it is a
currently a very manual process. The overall aim of the project is to make
applying kernel fixes an easy and automatic process, which will make it easier
to keep a CentOS installation more secure by without having to schedule
downtime.&lt;/p&gt;
&lt;p&gt;As the first part of this project, I've been writing
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;kpatch-package-builder&lt;/span&gt;&lt;/tt&gt;, a tool which generates RPM packages containing a
kernel module which patchs the currently running kernel.  These distributable
packages contain a single kernel patch, so standard package management tools,
such as dnf and yum can install and manage them.&lt;/p&gt;
&lt;p&gt;This first version is pretty simple. You create a patch against the source of the
kernel you want to modify, then run &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;kpatch-package-builder&lt;/span&gt;&lt;/tt&gt; with the patch
name as the last argument. The output can either be a built .rpm file, or the
raw spec.&lt;/p&gt;
&lt;p&gt;By default &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;kpatch-package-builder&lt;/span&gt;&lt;/tt&gt; outputs an RPM .spec file, which can be
used to build the RPM. This is a very simple spec, which just specifies the
name of the package, description, and other common package metadata. The name
of the package currently is based off the patch filename with a prefix of
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;kpatch-module-&lt;/span&gt;&lt;/tt&gt;, which allows these packages to be simply distinguished.
Future versions will have a series of virtual dependencies to prevent patch
collisions, but that's something for a future post.&lt;/p&gt;
&lt;p&gt;When given the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-b&lt;/span&gt;&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--build-rpm&lt;/span&gt;&lt;/tt&gt; option, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;kpatch-package-builder&lt;/span&gt;&lt;/tt&gt;
will invoke rpmbuild and build the package in place. The makes the kernel patch
to distributable package a single step.&lt;/p&gt;
&lt;p&gt;As an example, creating a package from a patch file:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;vagrant&amp;#64;localhost&lt;span class="w"&gt; &lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;kpatch-package-builder&lt;span class="w"&gt; &lt;/span&gt;-b&lt;span class="w"&gt; &lt;/span&gt;livepatch-test.patch&lt;span class="w"&gt;
&lt;/span&gt;kpatch-package-builder:&lt;span class="w"&gt; &lt;/span&gt;generating&lt;span class="w"&gt; &lt;/span&gt;spec&lt;span class="w"&gt; &lt;/span&gt;file...&lt;span class="w"&gt;
&lt;/span&gt;kpatch-package-builder:&lt;span class="w"&gt; &lt;/span&gt;building&lt;span class="w"&gt; &lt;/span&gt;RPM...&lt;span class="w"&gt;
&lt;/span&gt;kpatch-package-builder:&lt;span class="w"&gt; &lt;/span&gt;writing&lt;span class="w"&gt; &lt;/span&gt;spec&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;/tmp/kpatch_3I6mHJ.spec...&lt;span class="w"&gt;
&lt;/span&gt;kpatch-package-builder:&lt;span class="w"&gt; &lt;/span&gt;writing&lt;span class="w"&gt; &lt;/span&gt;kpatch-module-livepatch-test-1-1.x86_64.rpm...
&lt;/pre&gt;
&lt;p&gt;The default metadata associated with that generated package:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;vagrant&amp;#64;localhost&lt;span class="w"&gt; &lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;rpm&lt;span class="w"&gt; &lt;/span&gt;-qip&lt;span class="w"&gt; &lt;/span&gt;kpatch-module-livepatch-test-1-1.x86_64.rpm&lt;span class="w"&gt;
&lt;/span&gt;Name&lt;span class="w"&gt;        &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;kpatch-module-livepatch-test&lt;span class="w"&gt;
&lt;/span&gt;Version&lt;span class="w"&gt;     &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;Release&lt;span class="w"&gt;     &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;Architecture:&lt;span class="w"&gt; &lt;/span&gt;x86_64&lt;span class="w"&gt;
&lt;/span&gt;Install&lt;span class="w"&gt; &lt;/span&gt;Date:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;installed&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;Group&lt;span class="w"&gt;       &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;System&lt;span class="w"&gt; &lt;/span&gt;Environment/Kernel&lt;span class="w"&gt;
&lt;/span&gt;Size&lt;span class="w"&gt;        &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;281661&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;License&lt;span class="w"&gt;     &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;GPLv2&lt;span class="w"&gt;
&lt;/span&gt;Signature&lt;span class="w"&gt;   &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;none&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;Source&lt;span class="w"&gt; &lt;/span&gt;RPM&lt;span class="w"&gt;  &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;kpatch-module-livepatch-test-1-1.src.rpm&lt;span class="w"&gt;
&lt;/span&gt;Build&lt;span class="w"&gt; &lt;/span&gt;Date&lt;span class="w"&gt;  &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Wed&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;24&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Jun&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;:26:46&lt;span class="w"&gt; &lt;/span&gt;EDT&lt;span class="w"&gt;
&lt;/span&gt;Build&lt;span class="w"&gt; &lt;/span&gt;Host&lt;span class="w"&gt;  &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;localhost&lt;span class="w"&gt;
&lt;/span&gt;Relocations&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;relocatable&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;Summary&lt;span class="w"&gt;     &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;kpatch&lt;span class="w"&gt; &lt;/span&gt;livepatch&lt;span class="w"&gt; &lt;/span&gt;module&lt;span class="w"&gt;
&lt;/span&gt;Description&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt;
&lt;/span&gt;Package&lt;span class="w"&gt; &lt;/span&gt;generated&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;livepatch-test.patch&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;kpatch-package-builder
&lt;/pre&gt;
&lt;p&gt;The contents of the package:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;vagrant&amp;#64;localhost&lt;span class="w"&gt; &lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;rpm&lt;span class="w"&gt; &lt;/span&gt;-qlp&lt;span class="w"&gt; &lt;/span&gt;kpatch-module-livepatch-test-1-1.x86_64.rpm&lt;span class="w"&gt;
&lt;/span&gt;/var/lib/kpatch/3.10.0-229.el7.x86_64/kpatch-livepatch-test.ko
&lt;/pre&gt;
&lt;p&gt;The current options available:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;vagrant&amp;#64;localhost&lt;span class="w"&gt; &lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;kpatch-package-builder&lt;span class="w"&gt; &lt;/span&gt;-h&lt;span class="w"&gt;
&lt;/span&gt;usage:&lt;span class="w"&gt; &lt;/span&gt;kpatch-package-builder&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;-h&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;-v&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;FILE&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-b&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;-k&lt;span class="w"&gt; &lt;/span&gt;VERSION&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;-a&lt;span class="w"&gt; &lt;/span&gt;ARCH&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
                              &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;--set-release&lt;span class="w"&gt; &lt;/span&gt;NUM&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;--set-version&lt;span class="w"&gt; &lt;/span&gt;NUM&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;-d&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
                              &lt;/span&gt;PATCH&lt;span class="w"&gt;

&lt;/span&gt;Build&lt;span class="w"&gt; &lt;/span&gt;an&lt;span class="w"&gt; &lt;/span&gt;RPM&lt;span class="w"&gt; &lt;/span&gt;package&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;an&lt;span class="w"&gt; &lt;/span&gt;RPM&lt;span class="w"&gt; &lt;/span&gt;spec&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;manage&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;kpatch&lt;span class="w"&gt;
&lt;/span&gt;livepatch&lt;span class="w"&gt; &lt;/span&gt;module.&lt;span class="w"&gt;

&lt;/span&gt;positional&lt;span class="w"&gt; &lt;/span&gt;arguments:&lt;span class="w"&gt;
  &lt;/span&gt;PATCH&lt;span class="w"&gt;                 &lt;/span&gt;patch&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;which&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;build&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;livepatch&lt;span class="w"&gt; &lt;/span&gt;module&lt;span class="w"&gt;

&lt;/span&gt;optional&lt;span class="w"&gt; &lt;/span&gt;arguments:&lt;span class="w"&gt;
  &lt;/span&gt;-h,&lt;span class="w"&gt; &lt;/span&gt;--help&lt;span class="w"&gt;            &lt;/span&gt;show&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;message&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;-v,&lt;span class="w"&gt; &lt;/span&gt;--version&lt;span class="w"&gt;         &lt;/span&gt;show&lt;span class="w"&gt; &lt;/span&gt;program&lt;span class="err"&gt;'&lt;/span&gt;s&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;number&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;FILE,&lt;span class="w"&gt; &lt;/span&gt;--output&lt;span class="w"&gt; &lt;/span&gt;FILE&lt;span class="w"&gt;
                        &lt;/span&gt;name&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="w"&gt; &lt;/span&gt;spec&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt;
  &lt;/span&gt;-b,&lt;span class="w"&gt; &lt;/span&gt;--build-rpm&lt;span class="w"&gt;       &lt;/span&gt;build&lt;span class="w"&gt; &lt;/span&gt;an&lt;span class="w"&gt; &lt;/span&gt;RPM&lt;span class="w"&gt; &lt;/span&gt;package&lt;span class="w"&gt;
  &lt;/span&gt;-k&lt;span class="w"&gt; &lt;/span&gt;VERSION,&lt;span class="w"&gt; &lt;/span&gt;--kernel&lt;span class="w"&gt; &lt;/span&gt;VERSION&lt;span class="w"&gt;
                        &lt;/span&gt;target&lt;span class="w"&gt; &lt;/span&gt;kernel&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;build&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;livepatch&lt;span class="w"&gt; &lt;/span&gt;module&lt;span class="w"&gt;
                        &lt;/span&gt;against.&lt;span class="w"&gt; &lt;/span&gt;Defaults&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;currently&lt;span class="w"&gt; &lt;/span&gt;running&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt;
  &lt;/span&gt;-a&lt;span class="w"&gt; &lt;/span&gt;ARCH,&lt;span class="w"&gt; &lt;/span&gt;--arch&lt;span class="w"&gt; &lt;/span&gt;ARCH&lt;span class="w"&gt;  &lt;/span&gt;architecture&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;compile&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;patch&lt;span class="w"&gt; &lt;/span&gt;against&lt;span class="w"&gt;
  &lt;/span&gt;--set-release&lt;span class="w"&gt; &lt;/span&gt;NUM&lt;span class="w"&gt;     &lt;/span&gt;package&lt;span class="w"&gt; &lt;/span&gt;release&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt;
  &lt;/span&gt;--set-version&lt;span class="w"&gt; &lt;/span&gt;NUM&lt;span class="w"&gt;     &lt;/span&gt;package&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;number&lt;span class="w"&gt;
  &lt;/span&gt;-d,&lt;span class="w"&gt; &lt;/span&gt;--debug&lt;span class="w"&gt;           &lt;/span&gt;print&lt;span class="w"&gt; &lt;/span&gt;debug&lt;span class="w"&gt; &lt;/span&gt;information&lt;span class="w"&gt;

&lt;/span&gt;Usage&lt;span class="w"&gt; &lt;/span&gt;examples:&lt;span class="w"&gt;

&lt;/span&gt;Build&lt;span class="w"&gt; &lt;/span&gt;an&lt;span class="w"&gt; &lt;/span&gt;RPM&lt;span class="w"&gt; &lt;/span&gt;package&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;given&lt;span class="w"&gt; &lt;/span&gt;patch:&lt;span class="w"&gt;

    &lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;kpatch-package-builder&lt;span class="w"&gt; &lt;/span&gt;--build-rpm&lt;span class="w"&gt; &lt;/span&gt;module.patch&lt;span class="w"&gt;

&lt;/span&gt;Generate&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;spec&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;later&lt;span class="w"&gt; &lt;/span&gt;build&lt;span class="w"&gt; &lt;/span&gt;into&lt;span class="w"&gt; &lt;/span&gt;an&lt;span class="w"&gt; &lt;/span&gt;RPM:&lt;span class="w"&gt;

    &lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;kpatch-package-builder&lt;span class="w"&gt; &lt;/span&gt;--output&lt;span class="w"&gt; &lt;/span&gt;module.spec&lt;span class="w"&gt; &lt;/span&gt;module.patch
&lt;/pre&gt;
&lt;p&gt;If you want to test this or use it yourself, the code lives at &lt;a class="reference external" href="https://github.com/centos-livepatching/kpatch-package-builder"&gt;https://github.com/centos-livepatching/kpatch-package-builder&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="future-work"&gt;
&lt;h2&gt;Future work&lt;/h2&gt;
&lt;p&gt;Next up is the rest of the tooling to make building and distributing a series
of patches across a set of kernel versions easy. This will be working on top of
the basic kpatch-package-builder functionality to allow building many versions
of packages for particular kernels.&lt;/p&gt;
&lt;/div&gt;
</content><category term="kpatch"></category><category term="kernel"></category><category term="centos"></category><category term="gsoc"></category><category term="kpatch"></category></entry><entry><title>Vagrant on fedora 21 and later</title><link href="https://blog.kgz.sh/vagrant-fedora-21" rel="alternate"></link><published>2015-05-10T22:23:00+01:00</published><updated>2015-05-10T22:23:00+01:00</updated><author><name>Louis Taylor</name></author><id>tag:blog.kgz.sh,2015-05-10:/vagrant-fedora-21</id><content type="html">&lt;p&gt;Vagrant is &lt;a class="reference external" href="https://bugzilla.redhat.com/show_bug.cgi?id=1020456"&gt;now packaged&lt;/a&gt; in Fedora 21 and later versions, which is great news.
No more messing around with the horror of rvm!&lt;/p&gt;
&lt;p&gt;After installing vagrant and the libvirt plugin with yum:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo yum install vagrant vagrant-libvirt
&lt;/pre&gt;
&lt;p&gt;I got some syntax errors from Vagrant:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ vagrant up
/usr/share/vagrant/lib/vagrant/pre-rubygems.rb:19:in `require_relative': /usr/share/vagrant/lib/vagrant/bundler.rb:217: syntax error, unexpected tPOW (SyntaxError)
    def internal_install(plugins, update, **extra)
                                            ^
/usr/share/vagrant/lib/vagrant/bundler.rb:298: class definition in method body
/usr/share/vagrant/lib/vagrant/bundler.rb:315: class definition in method body
/usr/share/vagrant/lib/vagrant/bundler.rb:368: syntax error, unexpected keyword_end, expecting $end
    from /usr/share/vagrant/lib/vagrant/pre-rubygems.rb:19:in `&amp;lt;main&amp;gt;'
&lt;/pre&gt;
&lt;p&gt;This was caused by rvm having an old version of ruby installed, which is what
was installed when I installed vagrant on this machine initially:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ ruby --version
ruby 1.9.3p545 (2014-02-24 revision 45159) [x86_64-linux]
&lt;/pre&gt;
&lt;p&gt;Luckily you can just:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ rvm implode
&lt;/pre&gt;
&lt;p&gt;and everything will be happy, where happy is defined by vagrant running and
having the fewest versions of ruby installed.&lt;/p&gt;
</content><category term="fedora"></category><category term="fedora"></category><category term="vagrant"></category><category term="libvirt"></category></entry><entry><title>A brief five year interlude</title><link href="https://blog.kgz.sh/interlude" rel="alternate"></link><published>2015-01-23T22:23:00+00:00</published><updated>2015-01-23T22:23:00+00:00</updated><author><name>Louis Taylor</name></author><id>tag:blog.kgz.sh,2015-01-23:/interlude</id><content type="html">&lt;p&gt;I've since done my GCSE and A-level exams, and am now half way
through university.&lt;/p&gt;
&lt;p&gt;Some sailing robots made with friends from my university:&lt;/p&gt;
&lt;img alt="" src="https://blog.kgz.sh/images/dewi.jpg" /&gt;
&lt;img alt="" src="https://blog.kgz.sh/images/kitty.jpg" /&gt;
&lt;p&gt;Old posts begin here:&lt;/p&gt;
</content><category term="things"></category></entry><entry><title>Controlling vagalume last.fm client using python</title><link href="https://blog.kgz.sh/control-vagalume-from-python" rel="alternate"></link><published>2010-06-01T18:09:00+01:00</published><updated>2010-06-01T18:09:00+01:00</updated><author><name>Louis Taylor</name></author><id>tag:blog.kgz.sh,2010-06-01:/control-vagalume-from-python</id><content type="html">&lt;p&gt;I've recently been playing with the docky python bindings, and started by
writing a helper to interact with &lt;a class="reference external" href="http://vagalume.igalia.com/"&gt;Vagalume&lt;/a&gt;, a
lightweight last.fm client (I later added it to &lt;a class="reference external" href="https://launchpad.net/vagalume-docky"&gt;a project on launchpad&lt;/a&gt;). The vagalume DBus methods and
signals are mostly undocumented, but they can be found lurking around after a
quick look at &lt;a class="reference external" href="http://gitorious.org/vagalume/vagalume/blobs/master/src/dbus.h"&gt;some of the source code&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dbus&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gobject&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dbus.mainloop.glib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DBusGMainLoop&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Vagalume&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DBusGMainLoop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;set_as_default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dbus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SessionBus&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;com.igalia.vagalume&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                          &lt;span class="s1"&gt;&amp;#39;/com/igalia/vagalume&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_signal_receiver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;song_changed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                     &lt;span class="n"&gt;dbus_interface&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;com.igalia.vagalume&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                     &lt;span class="n"&gt;signal_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;notify&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;song_changed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stopped&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;#do something when the player is stopped&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stopped&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;playing&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;artist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;album&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="c1"&gt;#do something with the data here...&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;playing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;artist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;album&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;stopped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;Run when music is stopped&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;playing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;artist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;album&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;Run when new song is played&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Vagalume&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# gtk mainloop can be used if you&amp;#39;re using this as part of a gtk app&lt;/span&gt;
    &lt;span class="n"&gt;mainloop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gobject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MainLoop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_running&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll probably notice the method &lt;tt class="docutils literal"&gt;song_changed&lt;/tt&gt;. This is a method which is
registered with DBus and run each time the &lt;tt class="docutils literal"&gt;'notify'&lt;/tt&gt; signal is emitted from
vagalume. This checks whether the notification is due to vagalume starting a
new song or stopping the current one and runs either &lt;tt class="docutils literal"&gt;self.stopped&lt;/tt&gt; or
&lt;tt class="docutils literal"&gt;self.playing&lt;/tt&gt;. These two methods by default do nothing, so subclassing
&lt;tt class="docutils literal"&gt;Vagalume&lt;/tt&gt; to make them do something useful is good:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyFancyVagalume&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Vagalume&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;stopped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;just stopped the beat&amp;#39;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;playing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;artist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;album&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;now playing &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot; by &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;artist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To interact with vagalume do something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;vagalume&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Vagalume&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# do anything you want with dbus&lt;/span&gt;
&lt;span class="n"&gt;vagalume&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Play&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;vagalume&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Skip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;vagalume&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LoveTrack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;vagalume&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BanTrack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;vagalume&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;take a look at the source
(&lt;a class="reference external" href="http://gitorious.org/vagalume/vagalume/blobs/master/src/dbus.h"&gt;http://gitorious.org/vagalume/vagalume/blobs/master/src/dbus.h&lt;/a&gt;) for all of the
functions available&lt;/p&gt;
</content><category term="python"></category><category term="DBus"></category><category term="open source"></category><category term="programing"></category><category term="python"></category><category term="vagalume"></category></entry><entry><title>Grabbing screenshots as a Python Image Library Image type</title><link href="https://blog.kgz.sh/screenshots-with-python-image-library" rel="alternate"></link><published>2010-05-26T18:09:00+01:00</published><updated>2010-05-26T18:09:00+01:00</updated><author><name>Louis Taylor</name></author><id>tag:blog.kgz.sh,2010-05-26:/screenshots-with-python-image-library</id><content type="html">&lt;p&gt;A couple of days ago I needed to take screenshots of my linux desktop's screen and
manipulate these captured images using Python Image Library (PIL). I wrote a
small python class to do the work of taking the screenshot and returning a PIL
&lt;tt class="docutils literal"&gt;Image&lt;/tt&gt; object for use in the rest of the system I was writing.&lt;/p&gt;
&lt;p&gt;The code ended up being simpler than I expected, mostly because &lt;a class="reference external" href="http://en.wikipedia.org/wiki/GDK"&gt;GDK&lt;/a&gt;, the library used as an intermediary
between GTK and the low-level window manager and display server commands, does
all the heavy lifting.&lt;/p&gt;
&lt;div class="section" id="method"&gt;
&lt;h2&gt;Method&lt;/h2&gt;
&lt;p&gt;I wanted to take many screenshots during a run of the program I was writing, so
allocated a persistent &lt;tt class="docutils literal"&gt;gtk.gdk.Pixbuf&lt;/tt&gt; object to store the captured image
in. This object has a handy &lt;tt class="docutils literal"&gt;get_from_drawable&lt;/tt&gt; method. Of course, the X11
root window is a drawable, so by using &lt;tt class="docutils literal"&gt;gtk.gdk.get_default_root_window()&lt;/tt&gt; we
can copy each pixel into our buffer.&lt;/p&gt;
&lt;p&gt;Once the &lt;tt class="docutils literal"&gt;Pixbuf&lt;/tt&gt; is full, an &lt;tt class="docutils literal"&gt;Image&lt;/tt&gt; needs to be created from it, since
that was the original aim. Luckily, there's &lt;tt class="docutils literal"&gt;Image.frombuffer&lt;/tt&gt; to do all the
hard work when combined with &lt;tt class="docutils literal"&gt;Pixbuf.get_pixels()&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Full code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;gtk&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Screenshotter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img_width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen_width&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img_height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen_height&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screengrab&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pixbuf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COLORSPACE_RGB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img_width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img_height&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;take&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screengrab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_from_drawable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_default_root_window&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gdk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;colormap_get_system&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img_width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img_height&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;final_screengrab&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;frombuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;RGB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img_width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img_height&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screengrab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_pixels&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;raw&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;RGB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screengrab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_rowstride&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;final_screengrab&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;screenshot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Screenshotter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;screenshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;take&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="programing"></category><category term="python"></category><category term="python image library"></category></entry><entry><title>LaTeX in your system tray</title><link href="https://blog.kgz.sh/taylortype" rel="alternate"></link><published>2010-04-05T18:02:00+01:00</published><updated>2010-04-05T18:02:00+01:00</updated><author><name>Louis Taylor</name></author><id>tag:blog.kgz.sh,2010-04-05:/taylortype</id><content type="html">&lt;p&gt;Whilst procrastinating on writing GCSE physics coursework, I thought it would
be neat to have LaTeX run in the background and notify you when the document
you're working on contains errors.&lt;/p&gt;
&lt;img alt="" src="https://blog.kgz.sh/images/taylortype0.png" /&gt;
&lt;p&gt;I wrote a python application which puts a small icon in the system tray. You
can configure it to compile a LaTeX document.&lt;/p&gt;
&lt;p&gt;It has a couple of settings for things like input file, output directory and
automatic PDF opening (useful with evince, since opening refreshes the file if
it is currently open in an existing evince window).  It supports simple error
messages for both LaTeX and BibTeX.&lt;/p&gt;
&lt;img alt="" src="https://blog.kgz.sh/images/taylortype1.png" /&gt;
&lt;p&gt;It uses GTK for the system tray icon, and libnotify to display the error
message notifications.&lt;/p&gt;
&lt;p&gt;The project is on launchpad here: &lt;a class="reference external" href="https://launchpad.net/taylortype"&gt;https://launchpad.net/taylortype&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There's a small site on sourceforge: &lt;a class="reference external" href="http://taylortype.sourceforge.net/"&gt;http://taylortype.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
</content><category term="LaTeX, python"></category><category term="GPLv3"></category><category term="LaTeX"></category><category term="linux"></category><category term="open source"></category><category term="programing"></category><category term="python"></category><category term="taylortype"></category></entry><entry><title>Green/blue thing</title><link href="https://blog.kgz.sh/green-blue-thing" rel="alternate"></link><published>2010-04-04T21:24:00+01:00</published><updated>2010-04-04T21:24:00+01:00</updated><author><name>Louis Taylor</name></author><id>tag:blog.kgz.sh,2010-04-04:/green-blue-thing</id><content type="html">&lt;iframe
src="//player.vimeo.com/video/9220323?loop=1&amp;title=0&amp;byline=0&amp;portrait=0"
width="676" height="500" frameborder="0" webkitallowfullscreen
mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</content><category term="3d"></category><category term="3d"></category><category term="blender"></category><category term="images"></category></entry><entry><title>Some fur</title><link href="https://blog.kgz.sh/some-fur" rel="alternate"></link><published>2009-11-30T18:14:00+00:00</published><updated>2009-11-30T18:14:00+00:00</updated><author><name>Louis Taylor</name></author><id>tag:blog.kgz.sh,2009-11-30:/some-fur</id><content type="html">&lt;p&gt;Playing with fluffy things in blender.&lt;/p&gt;
&lt;img alt="" src="https://blog.kgz.sh/images/large-brute-beast-pic34.jpg" /&gt;
&lt;img alt="" src="https://blog.kgz.sh/images/large-brute-beast-pic35.jpg" /&gt;
&lt;img alt="" src="https://blog.kgz.sh/images/smallhairythingshot43.jpg" /&gt;
&lt;img alt="" src="https://blog.kgz.sh/images/smallhairythingshot53.jpg" /&gt;
</content><category term="3d"></category><category term="3d"></category><category term="blender"></category><category term="images"></category></entry><entry><title>Low altitude flying craft</title><link href="https://blog.kgz.sh/flying-thing" rel="alternate"></link><published>2009-04-02T14:46:00+01:00</published><updated>2009-04-02T14:46:00+01:00</updated><author><name>Louis Taylor</name></author><id>tag:blog.kgz.sh,2009-04-02:/flying-thing</id><content type="html">&lt;img alt="" src="https://blog.kgz.sh/images/rocket-thing-pic-10.jpg" /&gt;
&lt;img alt="" src="https://blog.kgz.sh/images/rocket-thing-pic-16.jpg" /&gt;
&lt;img alt="" src="https://blog.kgz.sh/images/rocket-thing-pic-19.jpg" /&gt;
&lt;iframe
src="//player.vimeo.com/video/9167617?loop=1&amp;title=0&amp;byline=0&amp;portrait=0"
width="627" height="400" frameborder="0" webkitallowfullscreen
mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</content><category term="3d"></category><category term="3d"></category><category term="blender"></category><category term="images"></category></entry><entry><title>Hoop machine</title><link href="https://blog.kgz.sh/hoop-machine" rel="alternate"></link><published>2009-01-28T22:04:00+00:00</published><updated>2009-01-28T22:04:00+00:00</updated><author><name>Louis Taylor</name></author><id>tag:blog.kgz.sh,2009-01-28:/hoop-machine</id><content type="html">&lt;p&gt;Modeled in &lt;a class="reference external" href="http://www.blender.org/"&gt;Blender&lt;/a&gt; and rendered in Kerkythea.&lt;/p&gt;
&lt;img alt="" src="https://blog.kgz.sh/images/hoopmachine6.jpg" /&gt;
</content><category term="3d"></category><category term="3d"></category><category term="blender"></category><category term="images"></category></entry></feed>